<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {# Run `composer require symfony/webpack-encore-bundle`
           and uncomment the following Encore helpers to start using Symfony UX #}
        {% block stylesheets %}
            {#{{ encore_entry_link_tags('app') }}#}
        {% endblock %}

        {% block javascripts %}
            {#{{ encore_entry_script_tags('app') }}#}
        {% endblock %}
    </head>
    <body>
        {% block body %}{% endblock %}
    </body>
</html>

function editFormation($id,MyformationRepository $repository,Request $request){

$formation=$repository->find($id);
$editform=$this->createForm(FormationType::class,$formation);
$editform->handleRequest($request);
if ($editform->isSubmitted() && $editform->isValid()){

$em = $this->getDoctrine()->getManager();
$formation= $editform->getData();
// On récupère les images transmises
$file = $editform->get('image')->getData();
var_dump($file);
$fileName = md5(uniqid()) . '.' . $file->guessExtension();
// moves the file to the directory where brochures are stored
try {
$file->move(
$this->getParameter('brochures_directory'), $fileName);
} catch (FileException $e) {
// ... handle exception if something happens during file upload
}

$brochureFiles = $editform->get('brochure')->getData();

// this condition is needed because the 'brochure' field is not required
// so the PDF file must be processed only when a file is uploaded
if ($brochureFiles) {
// On boucle sur les images
foreach ($brochureFiles as $brochureFile) {
$originalFilename = pathinfo($brochureFile->getClientOriginalName(), PATHINFO_FILENAME);
// this is needed to safely include the file name as part of the URL
$safeFilename = transliterator_transliterate('Any-Latin; Latin-ASCII; [^A-Za-z0-9_] remove; Lower()', $originalFilename);
$newFilename = $safeFilename . '-' . uniqid() . '.' . $brochureFile->guessExtension();

// Move the file to the directory where brochures are stored
try {
$brochureFile->move(
$this->getParameter('brochures_directory'),
$newFilename
);
} catch (FileException $e) {
// ... handle exception if something happens during file upload
}

// updates the 'brochureFilename' property to store the PDF file name
// instead of its contents

$file = new File();
$file->setMyFile($newFilename);
$file->setFile("esprit");
$file->setDateCreation(new \DateTime());
$formation->addBrochureFilename($file);
}
}
$formation->setDateCreation(new \DateTime());
$formation->setImage($fileName);
var_dump($formation);

$em->flush();

return $this->redirectToRoute('list_formation');
}
return $this->render('product/edit.html.twig',
[
'editform'=>$editform->createView()
]);
}
